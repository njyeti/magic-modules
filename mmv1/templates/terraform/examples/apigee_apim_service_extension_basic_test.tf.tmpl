resource "google_project" "project" {
  project_id      = "tf-test%{random_suffix}"
  name            = "tf-test%{random_suffix}"
  org_id          = "{{index $.TestEnvVars "org_id"}}"
  billing_account = "{{index $.TestEnvVars "billing_account"}}"
  deletion_policy = "DELETE"
}

resource "time_sleep" "wait_60_seconds" {
  create_duration = "60s"
  depends_on      = [google_project.project]
}

resource "google_project_service" "apigee" {
  project    = google_project.project.project_id
  service    = "apigee.googleapis.com"
  depends_on = [time_sleep.wait_60_seconds]
}

resource "google_project_service" "compute" {
  project    = google_project.project.project_id
  service    = "compute.googleapis.com"
  depends_on = [google_project_service.apigee]
}

resource "google_project_service" "service_networking" {
  project    = google_project.project.project_id
  service    = "servicenetworking.googleapis.com"
  depends_on = [google_project_service.compute]
}

resource "time_sleep" "wait_120_seconds" {
  create_duration = "120s"
  depends_on      = [google_project_service.service_networking]
}

resource "google_compute_network" "apigee_network" {
  name       = "apigee-network"
  project    = google_project.project.project_id
  depends_on = [time_sleep.wait_120_seconds]
}

resource "google_compute_global_address" "apigee_range" {
  name          = "apigee-range"
  purpose       = "VPC_PEERING"
  address_type  = "INTERNAL"
  prefix_length = 16
  network       = google_compute_network.apigee_network.id
  project       = google_project.project.project_id
}

resource "google_service_networking_connection" "apigee_vpc_connection" {
  network                 = google_compute_network.apigee_network.id
  service                 = "servicenetworking.googleapis.com"
  reserved_peering_ranges = [google_compute_global_address.apigee_range.name]
  depends_on              = [google_project_service.service_networking]
}

resource "google_apigee_organization" "apigee_org" {
  analytics_region   = "us-central1"
  project_id         = google_project.project.project_id
  authorized_network = google_compute_network.apigee_network.id
  depends_on         = [
    google_service_networking_connection.apigee_vpc_connection,
    google_project_service.apigee,
  ]
}

resource "google_apigee_instance" "apigee_instance" {
  name     = "tf-test%{random_suffix}"
  location = "us-central1"
  org_id   = google_apigee_organization.apigee_org.id
}


resource "google_compute_managed_ssl_certificate" "default" {
  name = "tf-test%{random_suffix}"

  managed {
    domains = ["my-service.com"]
  }
}

resource "google_compute_target_https_proxy" "default" {
  name             = "tf-test%{random_suffix}"
  url_map          = google_compute_url_map.default.id
  ssl_certificates = [google_compute_managed_ssl_certificate.default.id]
}

resource "google_compute_url_map" "default" {
  name            = "tf-test%{random_suffix}"
  description     = "a description"
  default_service = google_compute_backend_service.default.id
}

resource "google_compute_backend_service" "default" {
  name                  = "tf-test%{random_suffix}"
  port_name             = "https"
  protocol              = "HTTPS"
  timeout_sec           = 10
  load_balancing_scheme = "EXTERNAL_MANAGED"
}

resource "google_compute_global_forwarding_rule" "default" {
  name                  = "tf-test%{random_suffix}"
  load_balancing_scheme = "EXTERNAL_MANAGED"
  network_tier          = "PREMIUM"
  port_range            = "443"
  target                = google_compute_target_https_proxy.default.id
}

resource "google_apigee_apim_service_extension" "{{$.PrimaryResourceId}}" {
  org_id                    = google_apigee_organization.apigee_org.id
  apim_service_extension_id = "tf-test%{random_suffix}"
  extension_processor       = "proxy-extension"
  lb_forwarding_rule        = google_compute_global_forwarding_rule.default.self_link
  network                   = "projects/project01/global/networks/default"
  network_configs {
    region = "us-west1"
    subnet = "projects/project01/regions/us-west1/subnetworks/default"
  }
  extensions {
    name             = "ext0"
    match_condition  = "true"
    fail_open        = true
    hostname         = "abc.foo.com"
    supported_events = ["REQUEST_HEADERS","RESPONSE_HEADERS"]
  }
}